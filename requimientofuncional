Requerimientos funcionales: describen qué debe hacer el sistema. Es decir, las tareas, servicios o comportamientos que el software debe permitir o ejecutar.

Requerimientos no funcionales: describen cómo debe hacerlo el sistema, con qué calidad, bajo qué restricciones, con qué rendimiento, seguridad, confiabilidad, etc.

Características

Los funcionales suelen venir directamente de las necesidades del usuario o negocio: qué espera que el sistema le permita hacer. Ej: autenticación, creación de pedidos, generación de reportes.
Los no funcionales pueden surgir de normas, estándares, expectativas de calidad, regulaciones, limitaciones tecnológicas, etc. No especifican una acción directa del usuario, sino características del sistema que afectan experiencia, operatividad o mantenimiento.

Ejemplos

Funcionales:

El sistema debe permitir que un usuario se registre con nombre de usuario y contraseña.
Debe generarse un reporte mensual de ventas.
Los usuarios con rol “gerente” pueden aprobar solicitudes.

No funcionales:

Tiempo de respuesta: el sistema debe responder a una solicitud en menos de 2 segundos.
Disponibilidad: estar activo (online) un 99,9 % del tiempo.
Usabilidad: interfaz clara, fácil de aprender.
Compatibilidad con varios dispositivos o navegadores.

Diferencias clave

Los funcionales son acciones específicas, los no funcionales atributos de calidad o restricciones del sistema.
Los funcionales son más fáciles de identificar al inicio del proyecto; los no funcionales muchas veces requieren atención desde la arquitectura del sistema para que todo lo demás pueda cumplir con sus estándares.
En términos de pruebas:

Para funcionales → pruebas unitarias, pruebas de integración, de aceptación que verifiquen que se cumpla la funcionalidad.
Para no funcionales → pruebas de rendimiento, carga, seguridad, usabilidad, etc.

Importancia

Tener bien definidos los funcionales es esencial para que el sistema haga lo que tiene que hacer.
Tener bien definidos los no funcionales es imprescindible para que lo haga bien: que sea rápido, seguro, usable, mantenible, confiable.
Si ignorás los no funcionales, puede pasar que algo funcione pero sea tan lento, o inseguro, o difícil de usar, que termine siendo rechazado o genere muchos problemas.
Ambos tipos van de la mano: uno define lo que se necesita hacer, el otro “la excelencia operativa”, digamos.
